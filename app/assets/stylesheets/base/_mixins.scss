// ------------------------------
// Typography
// ------------------------------

// Font size mixin
@mixin font-size($font-size) {
  font-size: $font-size;
  font-size: ($font-size / $base-font-size) * 1rem;
}

// ------------------------------
// Buttons
// ------------------------------

// Button style mixin
@mixin button($button-color) {
  background-color: $button-color;
  color: white !important;

  &:hover,
  &:focus {
    background: shade($button-color, 15%);
    color: white;
  }
  &:visited {
    color: white;
  }
}

// ------------------------------
// Rems Converter
// ------------------------------
// https://github.com/bitmanic/rem

// Example:
/*
  .element {
    @include rem('padding', 10px 0 2px 5px);
  }
*/

$baseline-px: $base-font-size;

@mixin rem($property, $px-values) {

  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem;

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  }
  @else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {

      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value);
      }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); }
      }

    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}
