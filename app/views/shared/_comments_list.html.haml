- if params[:comment_sort] == 'rating' 
  - comments = object.comments.includes(:user).order("comments.plus_score_count - comments.minus_score_count DESC").paginate(:page => params[:comment_page])
- elsif params[:comment_sort] == 'newest'
  - comments = object.comments.includes(:user).order("comments.created_at DESC").paginate(:page => params[:comment_page]) 
- else
  - comments = object.comments.includes(:user).order("comments.root_id ASC, comments.lft ASC").paginate(:page => params[:comment_page]) 
     
- if comments.size > 0
  - logged_in? ? myscores = current_user.comment_scores.to_a : myscores = Array.new
     
  - if comments.total_pages > 1
    %p.this_many
      = "Displaying #{comments.offset + 1}-#{(comments.offset + comments.per_page > comments.total_entries ) ? comments.total_entries : comments.offset + comments.per_page} of "
      %b= comments.total_entries 
      total comments.

  = render :partial => 'shared/comments_pagination', :locals => { :object => object, :comments => comments }

  - if (params[:comment_sort] == 'newest' || params[:comment_sort] == 'rating') # just display a flat list since nesting doesn't make sense when sort=newest, likewise for rating
    - comments.each do |node|
      = render :partial => 'shared/comments_comment', :locals => {:object => object, :comment => node, :myscores => myscores, :flat => true}
  - else
    = display_nested_set_rows(comments) { |node| render :partial => 'shared/comments_comment', :locals => {:object => object, :comment => node, :myscores => myscores} }

  = render :partial => 'shared/comments_pagination', :locals => { :object => object, :comments => comments }

- if controller.controller_name == 'articles'
  %h3 Due to the archiving of this blog, comment posting has been disabled.
- else
  = render :partial => 'shared/comments_add', :locals => {:parent_id => 0, :object => object, :master_container => master_container, :redirect => true }

- if @goto_comment
  :javascript
    = "window.onload = function() {" unless @ajax_comment
    new Effect.ScrollTo('com#{@goto_comment.id}', {offset: -10});
    new Effect.Highlight('com#{@goto_comment.id}', {duration: 2});
    = ";" unless @ajax_comment
